#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN); // Create MFRC522 instance.

void setup() {
  pinMode(7, OUTPUT); // Corrección: Establecer pin 7 como salida
  pinMode(6, OUTPUT); // Corrección: Establecer pin 6 como salida
  Serial.begin(9600); // Initiate a serial communication
  SPI.begin();        // Initiate SPI bus
  mfrc522.PCD_Init(); // Initiate MFRC522
  Serial.println("Approximate your card to the reader...");
  Serial.println();
}

void loop() {
  // Look for new cards
  if (!mfrc522.PICC_IsNewCardPresent()) {
    return;
  }
  // Select one of the cards
  if (!mfrc522.PICC_ReadCardSerial()) {
    return;
  }
  // Show UID on serial monitor
  Serial.print("UID tag: ");
  String content = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
    Serial.print(mfrc522.uid.uidByte[i], HEX);
    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message: ");
  content.toUpperCase();
  if (content.substring(1) == "C5 E9 DA 23") { // Change here the UID of the card/cards that you want to give access
    Serial.println("Authorized access");
    Serial.println();
    for (int i = 0; i < 3; i++) { // Blink pin 6 three times
      digitalWrite(6, HIGH);
      delay(200);
      digitalWrite(6, LOW);
      delay(200);
    }
    delay(1000);
  } else {
    Serial.println("Access denied");
    Serial.println();
    for (int i = 0; i < 3; i++) { // Blink pin 7 three times
      digitalWrite(7, HIGH);
      delay(200);
      digitalWrite(7, LOW);
      delay(200);
    }
    delay(1000);
  }
}
